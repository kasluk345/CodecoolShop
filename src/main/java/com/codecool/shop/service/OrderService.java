package com.codecool.shop.service;

import com.codecool.shop.dao.ProductCategoryDao;
import com.codecool.shop.dao.ProductDao;
import com.codecool.shop.dao.implementation.CartDaoMem;
import com.codecool.shop.dao.implementation.ProductDaoMem;
import com.codecool.shop.model.Product;
import com.codecool.shop.model.ProductCategory;
import com.codecool.shop.model.User;
import com.codecool.shop.serialization.ProductSerializer;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;

public class OrderService {
    private CartDaoMem cartDaoMem;
    private ProductSerializer productSerializer;

    public OrderService(String userID) {
        this.cartDaoMem = CartDaoMem.getUserCart(userID);
        this.productSerializer = new ProductSerializer();
    }

    public void handlePostProduct(HttpServletRequest req, HttpServletResponse resp, String cartID) throws ServletException, IOException {

        //data from API (generated by JavaScript as String)
        String frontData = req.getReader().readLine();
        System.out.println("LOG (OrderService-l30)| Chosen product ID: "+frontData);

        //convert received String data into Product(object) by ProductSerializer
        //Product product = productSerializer.mapFromParams(frontData); //old solution (frontData as product in JSO formatN
        //System.out.println("SELECTED product (converted from JSON): "+product.toString());
        String productID = frontData.replace("\"",""); //new solution (frontData is number representing  product ID)
        productID = productID.replace(" ","");

        //read product from server (productDataStore) by productID
        ProductDao productDataStore = ProductDaoMem.getInstance();
        Product product = productDataStore.find(Integer.parseInt(productID));
        System.out.println("LOG (OrderService-l40)|SELECTED product (by ID): "+product);

        //add new Product to memory (productDao)
        cartDaoMem.find(cartID).add(product);


        //info do uzytkownia po zamowieniu
    }

    public void handleDeleteProduct(HttpServletRequest req, HttpServletResponse resp, String cartID) throws ServletException, IOException {
        //data from API (generated by JavaScript as String)
        String frontData = req.getReader().readLine();
        System.out.println("LOG (OrderService-l38)| ProductID to be deleted from cart: "+frontData);
        //convert received String data to int ProductID
        int productID = Integer.parseInt(frontData);
        //remove the Product from memory (productDao)
        System.out.println(cartID+ "| " + cartDaoMem.find(cartID).toString());
        if(productID<0) {
            cartDaoMem.find(cartID).removeAll();
        } else {
            cartDaoMem.find(cartID).remove(productID);
        }
        //info do uzytkownia po usunieciu
    }

    public List<Product> getAllProducts() {
        return cartDaoMem.getAll();
    }

    public double getTotalPrice() {return cartDaoMem.getTotalPrice();}

}